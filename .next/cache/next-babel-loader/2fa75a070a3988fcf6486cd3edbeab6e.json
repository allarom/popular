{"ast":null,"code":"var _jsxFileName = \"/Users/ar/projects/popular/components/Page.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { select } from \"d3\";\n\nvar Page = function Page(props) {\n  // let [data, setData] = useState();\n  var svgRef = useRef();\n  var title = null;\n  useEffect(function () {\n    var svg = select(svgRef.current);\n    var data = props.props.map(function (e) {\n      var title = [];\n      var traffic = [];\n      title.push(e.title);\n      traffic.push(parseInt(e.traffic.match(/\\d+/)[0]));\n    }); // setData(title)\n\n    console.log(\"data\", traffic);\n    svg.selectAll(\"circle\").data(data.title).join(\"circle\").attr(\"r\", data.traffic); // .attr(\"cx\", value => value *  2)\n    // .attr(\"cy\", value => value * 2)\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"svg\", {\n    ref: svgRef,\n    width: \"2000px\",\n    height: \"2000px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setData(data.map(function (value) {\n        return value + 5;\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Update\"));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/ar/projects/popular/components/Page.jsx"],"names":["React","useEffect","useState","useRef","dynamic","select","Page","props","svgRef","title","svg","current","data","map","e","traffic","push","parseInt","match","console","log","selectAll","join","attr","setData","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,MAAT,QAAuB,IAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACvB;AACA,MAAMC,MAAM,GAAGL,MAAM,EAArB;AACA,MAAIM,KAAK,GAAG,IAAZ;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMS,GAAG,GAAGL,MAAM,CAACG,MAAM,CAACG,OAAR,CAAlB;AACA,QAAMC,IAAI,GAAGL,KAAK,CAACA,KAAN,CAAYM,GAAZ,CAAgB,UAAAC,CAAC,EAAI;AACjC,UAAML,KAAK,GAAG,EAAd;AACA,UAAMM,OAAO,GAAG,EAAhB;AACAN,MAAAA,KAAK,CAACO,IAAN,CAAWF,CAAC,CAACL,KAAb;AACAM,MAAAA,OAAO,CAACC,IAAR,CAAaC,QAAQ,CAACH,CAAC,CAACC,OAAF,CAAUG,KAAV,CAAgB,KAAhB,EAAuB,CAAvB,CAAD,CAArB;AACA,KALY,CAAb,CAFe,CAQf;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,OAApB;AACAL,IAAAA,GAAG,CAACW,SAAJ,CAAc,QAAd,EACCT,IADD,CACMA,IAAI,CAACH,KADX,EAECa,IAFD,CAEM,QAFN,EAGCC,IAHD,CAGM,GAHN,EAGWX,IAAI,CAACG,OAHhB,EAVe,CAcf;AACA;AACA,GAhBQ,EAgBN,EAhBM,CAAT;AAkBD,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,GAAG,EAAEP,MAAV;AAAmB,IAAA,KAAK,EAAC,QAAzB;AAAkC,IAAA,MAAM,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMgB,OAAO,CAACZ,IAAI,CAACC,GAAL,CAAS,UAAAY,KAAK;AAAA,eAAIA,KAAK,GAAG,CAAZ;AAAA,OAAd,CAAD,CAAb;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,CADD;AAUC,CAjCD;;AAmCA,eAAenB,IAAf","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport dynamic from 'next/dynamic'\nimport { select } from \"d3\"\n\nconst Page = (props) => {\n\t// let [data, setData] = useState();\n\tconst svgRef = useRef();\n\tlet title = null\n\n\tuseEffect(() => {\n\t\tconst svg = select(svgRef.current);\n\t\tconst data = props.props.map(e => {\n\t\t\tconst title = []\n\t\t\tconst traffic = []\n\t\t\ttitle.push(e.title)\n\t\t\ttraffic.push(parseInt(e.traffic.match(/\\d+/)[0]))\n\t\t});\n\t\t// setData(title)\n\t\tconsole.log(\"data\", traffic)\n\t\tsvg.selectAll(\"circle\")\n\t\t.data(data.title)\n\t\t.join(\"circle\")\t\n\t\t.attr(\"r\", data.traffic)\n\t\t// .attr(\"cx\", value => value *  2)\n\t\t// .attr(\"cy\", value => value * 2)\n\t}, [])\n\nreturn (\n\t<React.Fragment>\n\t\t<svg ref={svgRef}  width='2000px' height='2000px'></svg>\n\t\t<br/>\n\t\t<button onClick={() => setData(data.map(value => value + 5))}>\n\t\tUpdate\n\t\t</button>\n\t</React.Fragment>\n )\n\n}\n\nexport default Page\n"]},"metadata":{},"sourceType":"module"}