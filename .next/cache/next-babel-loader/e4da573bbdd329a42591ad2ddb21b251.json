{"ast":null,"code":"import React, { useEffect, useState, useRef } from 'react';\n\nconst useResizeObserver = ref => {\n  const {\n    0: dimensions,\n    1: setDimensions\n  } = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect);\n      });\n      console.log(entries);\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserever.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;","map":{"version":3,"sources":["/Users/ar/projects/popular/hooks/useResizeObeserver.jsx"],"names":["React","useEffect","useState","useRef","useResizeObserver","ref","dimensions","setDimensions","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","console","log","observe","resizeObserever","unobserve"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;;AAEA,MAAMC,iBAAiB,GAAIC,GAAD,IAAS;AACjC,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BL,QAAQ,CAAC,IAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAMO,aAAa,GAAGH,GAAG,CAACI,OAA1B;AACA,UAAMC,cAAc,GAAG,IAAIC,cAAJ,CAAmBC,OAAO,IAAI;AACnDA,MAAAA,OAAO,CAACC,OAAR,CAAgBC,KAAK,IAAI;AACvBP,QAAAA,aAAa,CAACO,KAAK,CAACC,WAAP,CAAb;AACD,OAFD;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACD,KALsB,CAAvB;AAMAF,IAAAA,cAAc,CAACQ,OAAf,CAAuBV,aAAvB;AACA,WAAO,MAAM;AACXW,MAAAA,eAAe,CAACC,SAAhB,CAA0BZ,aAA1B;AACD,KAFD;AAGC,GAZQ,EAYN,CAACH,GAAD,CAZM,CAAT;AAaA,SAAOC,UAAP;AAED,CAlBD;;AAoBA,eAAeF,iBAAf","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\n\nconst useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null)\n\n  useEffect(() => {\n  const observeTarget = ref.current\n  const resizeObserver = new ResizeObserver(entries => {\n    entries.forEach(entry => {\n      setDimensions(entry.contentRect)\n    });\n    console.log(entries)\n  })\n  resizeObserver.observe(observeTarget)\n  return () => {\n    resizeObserever.unobserve(observeTarget)\n  }\n  }, [ref])\n  return dimensions;\n\n}\n\nexport default useResizeObserver"]},"metadata":{},"sourceType":"module"}