{"ast":null,"code":"var _jsxFileName = \"/Users/ar/projects/popular/components/Page.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { select, hierarchy, tree, linkVertical, forceSimulation } from \"d3\";\nimport json from './lang';\n\nconst Page = props => {\n  // let [data, setData] = useState();\n  const svgRef = useRef();\n  let title = null;\n  console.log(\"json\", json);\n  useEffect(() => {\n    const svg = select(svgRef.current); // const data = props.props.map(e => {\n    // \tconst title = []\n    // \tconst traffic = []\n    // \ttitle.push(e.title)\n    // \ttraffic.push(parseInt(e.traffic.match(/\\d+/)[0]))\n    // \treturn title, traffic\n    // });\n    // const root = hierarchy(props.props[0])\n\n    const root = hierarchy(json);\n    const treeLayout = tree().size([1700, 600]);\n    treeLayout(root);\n    const linkGenerator = linkVertical().x(node => node.x).y(node => node.y + 100);\n    svg.selectAll(\".node\").data(root.descendants()).join(\"circle\").attr(\"class\", \"node\").attr(\"r\", 5).attr(\"fill\", \"grey\").attr(\"cx\", node => node.x).attr(\"cy\", node => node.y + 100);\n    svg.selectAll(\".link\").data(root.links()).join(\"path\").attr(\"class\", \"link\").attr(\"fill\", \"none\").attr(\"stroke\", \"grey\").attr(\"d\", linkGenerator);\n    svg.selectAll(\".label\").data(root.descendants()).join(\"text\").attr(\"class\", \"label\").attr(\"fill\", \"black\").text(node => node.data.language).attr(\"font-size\", 16).attr(\"text-anchor\", \"middle\").attr(\"x\", node => node.x).attr(\"y\", node => node.y + 85);\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"svg\", {\n    ref: svgRef,\n    width: \"2000px\",\n    height: \"2000px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: () => setData(data.map(value => value + 5)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Update\"));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/ar/projects/popular/components/Page.jsx"],"names":["React","useEffect","useState","useRef","dynamic","select","hierarchy","tree","linkVertical","forceSimulation","json","Page","props","svgRef","title","console","log","svg","current","root","treeLayout","size","linkGenerator","x","node","y","selectAll","data","descendants","join","attr","links","text","language","setData","map","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport dynamic from 'next/dynamic'\nimport { select, hierarchy, tree, linkVertical, forceSimulation } from \"d3\"\nimport json from './lang'\n\nconst Page = (props) => {\n\t// let [data, setData] = useState();\n\tconst svgRef = useRef();\n\tlet title = null\n\tconsole.log(\"json\", json)\n\n\tuseEffect(() => {\n\t\tconst svg = select(svgRef.current);\n\t\t// const data = props.props.map(e => {\n\t\t// \tconst title = []\n\t\t// \tconst traffic = []\n\t\t// \ttitle.push(e.title)\n\t\t// \ttraffic.push(parseInt(e.traffic.match(/\\d+/)[0]))\n\t\t// \treturn title, traffic\n\t\t// });\n\n\t\t// const root = hierarchy(props.props[0])\n\t\tconst root = hierarchy(json)\n\t\tconst treeLayout = tree().size([1700, 600])\n\t\ttreeLayout(root)\n\n\n\t\tconst linkGenerator = linkVertical()\n\t\t.x(node => node.x)\n\t\t.y(node => node.y + 100)\n\n\t\tsvg\n\t\t.selectAll(\".node\")\n\t\t.data(root.descendants())\n\t\t.join(\"circle\")\n\t\t.attr(\"class\", \"node\")\n\t\t.attr(\"r\", 5)\n\t\t.attr(\"fill\", \"grey\")\n\t\t.attr(\"cx\", node => node.x)\n\t\t.attr(\"cy\", node => node.y + 100)\n\n\t\tsvg\n\t\t.selectAll(\".link\").data(root.links())\n\t\t.join(\"path\").attr(\"class\",\"link\")\n\t\t.attr(\"fill\", \"none\")\n\t\t.attr(\"stroke\", \"grey\")\n\t\t.attr(\"d\", linkGenerator)\n\n\t\tsvg\n\t\t.selectAll(\".label\")\n\t\t.data(root.descendants())\n\t\t.join(\"text\")\n\t\t.attr(\"class\", \"label\")\n\t\t.attr(\"fill\", \"black\")\n\t\t.text(node => node.data.language)\n\t\t.attr(\"font-size\", 16)\n\t\t.attr(\"text-anchor\", \"middle\")\n\t\t.attr(\"x\", node => node.x)\n\t\t.attr(\"y\", node => node.y + 85)\n\n\t}, [])\n\nreturn (\n\t<React.Fragment>\n\t\t<svg ref={svgRef}  width='2000px' height='2000px'></svg>\n\t\t<br/>\n\t\t<button onClick={() => setData(data.map(value => value + 5))}>\n\t\tUpdate\n\t\t</button>\n\t</React.Fragment>\n )\n\n}\n\nexport default Page\n"]},"metadata":{},"sourceType":"module"}