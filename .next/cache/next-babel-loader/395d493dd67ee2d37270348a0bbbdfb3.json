{"ast":null,"code":"var _jsxFileName = \"/Users/ar/projects/popular/components/Page.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { select, hierarchy, tree, linkVertical } from \"d3\";\nimport json from './lang';\n\nvar Page = function Page(props) {\n  // let [data, setData] = useState();\n  var svgRef = useRef();\n  var title = null;\n  console.log(\"json\", json);\n  useEffect(function () {\n    var svg = select(svgRef.current); // const data = props.props.map(e => {\n    // \tconst title = []\n    // \tconst traffic = []\n    // \ttitle.push(e.title)\n    // \ttraffic.push(parseInt(e.traffic.match(/\\d+/)[0]))\n    // \treturn title, traffic\n    // });\n    // const root = hierarchy(props.props[0])\n\n    var root = hierarchy(json);\n    var treeLayout = tree().size([1200, 300]);\n    treeLayout(root);\n    console.log(\"root\", root.descendants());\n    console.log(\"root\", root.links());\n    var linkGenerator = linkVertical().x(function (node) {\n      return node.x + 500;\n    }).y(function (node) {\n      return node.y + 100;\n    });\n    svg.selectAll(\".node\").data(root.descendants()).join(\"circle\").attr(\"class\", \"node\").attr(\"r\", 5).attr(\"fill\", \"grey\").attr(\"cx\", function (node) {\n      return node.x + 500;\n    }).attr(\"cy\", function (node) {\n      return node.y + 100;\n    });\n    svg.selectAll(\".link\").data(root.links()).join(\"path\").attr(\"class\", \"link\").attr(\"fill\", \"none\").attr(\"stroke\", \"grey\").attr(\"d\", linkGenerator);\n    svg.selectAll(\".label\").data(root.descendants()).join(\"text\").attr(\"class\", \"label\").attr(\"fill\", \"black\").text(function (node) {\n      return node.data.language;\n    }).attr(\"font-size\", 16).attr(\"text-anchor\", \"middle\").attr(\"x\", function (node) {\n      return node.x + 500;\n    }).attr(\"y\", function (node) {\n      return node.y + 100;\n    });\n\n    var myX = function myX() {\n      var a = [50, 120, 230, 310, 360, 600];\n    };\n\n    var x = Math.random() * (2000 - 20 * 2) + 20;\n    var y = Math.random() * (2000 - 20 * 2) + 20; // setData(title)\n    // svg.selectAll(\"circle\")\n    // .data(data)\n    // .join(\"circle\")\t\n    // .attr(\"r\", 20)\n    // .attr(\"cx\", value => myX(value))\n    // .attr(\"cy\", y)\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"svg\", {\n    ref: svgRef,\n    width: \"2000px\",\n    height: \"2000px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setData(data.map(function (value) {\n        return value + 5;\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Update\"));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/ar/projects/popular/components/Page.jsx"],"names":["React","useEffect","useState","useRef","dynamic","select","hierarchy","tree","linkVertical","json","Page","props","svgRef","title","console","log","svg","current","root","treeLayout","size","descendants","links","linkGenerator","x","node","y","selectAll","data","join","attr","text","language","myX","a","Math","random","setData","map","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport dynamic from 'next/dynamic'\nimport { select, hierarchy, tree, linkVertical } from \"d3\"\nimport json from './lang'\n\nconst Page = (props) => {\n\t// let [data, setData] = useState();\n\tconst svgRef = useRef();\n\tlet title = null\n\tconsole.log(\"json\", json)\n\n\tuseEffect(() => {\n\t\tconst svg = select(svgRef.current);\n\t\t// const data = props.props.map(e => {\n\t\t// \tconst title = []\n\t\t// \tconst traffic = []\n\t\t// \ttitle.push(e.title)\n\t\t// \ttraffic.push(parseInt(e.traffic.match(/\\d+/)[0]))\n\t\t// \treturn title, traffic\n\t\t// });\n\n\t\t// const root = hierarchy(props.props[0])\n\t\tconst root = hierarchy(json)\n\t\tconst treeLayout = tree().size([1200, 300])\n\t\ttreeLayout(root)\n\t\tconsole.log(\"root\", root.descendants())\n\t\tconsole.log(\"root\", root.links())\n\n\t\tconst linkGenerator = linkVertical()\n\t\t.x(node => node.x + 500)\n\t\t.y(node => node.y + 100)\n\n\t\tsvg\n\t\t.selectAll(\".node\")\n\t\t.data(root.descendants())\n\t\t.join(\"circle\")\n\t\t.attr(\"class\", \"node\")\n\t\t.attr(\"r\", 5)\n\t\t.attr(\"fill\", \"grey\")\n\t\t.attr(\"cx\", node => node.x + 500)\n\t\t.attr(\"cy\", node => node.y + 100)\n\n\t\tsvg\n\t\t.selectAll(\".link\").data(root.links())\n\t\t.join(\"path\").attr(\"class\",\"link\")\n\t\t.attr(\"fill\", \"none\")\n\t\t.attr(\"stroke\", \"grey\")\n\t\t.attr(\"d\", linkGenerator)\n\n\t\tsvg\n\t\t.selectAll(\".label\")\n\t\t.data(root.descendants())\n\t\t.join(\"text\")\n\t\t.attr(\"class\", \"label\")\n\t\t.attr(\"fill\", \"black\")\n\t\t.text(node => node.data.language)\n\t\t.attr(\"font-size\", 16)\n\t\t.attr(\"text-anchor\", \"middle\")\n\t\t.attr(\"x\", node => node.x + 500)\n\t\t.attr(\"y\", node => node.y + 100)\n\n\n\t\tconst myX = () => {\n\t\t\tconst a = [50, 120, 230, 310, 360, 600]\n\n\t\t}\n\t\tconst x = Math.random() * ( 2000 - 20 * 2 ) + 20;\n\t\tconst y = Math.random() * ( 2000 - 20 * 2) + 20;\n\t\t// setData(title)\n\t\t// svg.selectAll(\"circle\")\n\t\t// .data(data)\n\t\t// .join(\"circle\")\t\n\t\t// .attr(\"r\", 20)\n\t\t// .attr(\"cx\", value => myX(value))\n\t\t// .attr(\"cy\", y)\n\t}, [])\n\nreturn (\n\t<React.Fragment>\n\t\t<svg ref={svgRef}  width='2000px' height='2000px'></svg>\n\t\t<br/>\n\t\t<button onClick={() => setData(data.map(value => value + 5))}>\n\t\tUpdate\n\t\t</button>\n\t</React.Fragment>\n )\n\n}\n\nexport default Page\n"]},"metadata":{},"sourceType":"module"}