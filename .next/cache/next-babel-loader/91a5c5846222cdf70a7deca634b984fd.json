{"ast":null,"code":"var _jsxFileName = \"/Users/ar/projects/popular/components/ForceLayout.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { select, hierarchy, tree, linkVertical, forceSimulation, forceCenter, mouse, forceX, forceY, forceCollide, forceRadial } from \"d3\";\nimport json from './lang';\nimport { forceManyBody } from 'd3-force';\nimport useResizeObserver from '../hooks/useResizeObeserver'; // const useResizeObserver = ref => {\n//   const [dimensions, setDimensions] = useState()\n//   useEffect(() => {\n//   const observeTarget = ref.current\n//   const resizeObserever = new useResizeObserver((entries) => {\n//     console.log(entries)\n//   })\n//   resizeObserver.observe(observeTarget)\n//   return () => {\n//     resizeObserever.unobserve(observeTarget)\n//   }\n//   }, [ref])\n//   return dimensions;\n// }\n\nconst Page = props => {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const root = hierarchy(json);\n    const nodeData = root.descendants();\n    const linkData = root.links();\n    const simulation = forceSimulation(nodeData) // force\n    .force(\"center\", forceCenter(1000, 1000)).force(\"charge\", forceManyBody().strength(-40)).force(\"collide\", forceCollide(60)).on(\"tick\", () => {\n      console.log(\"current force\", simulation.alpha());\n      const linkGenerator = linkVertical().x(node => node.x).y(node => node.y + 100);\n      svg.selectAll(\".node\").data(nodeData).join(\"circle\").attr(\"class\", \"node\").attr(\"r\", 5).attr(\"fill\", \"grey\").attr(\"cx\", node => node.x).attr(\"cy\", node => node.y + 100); // svg\n      // .selectAll(\".link\")\n      // .data(linkData)\n      // .join(\"path\").attr(\"class\",\"link\")\n      // .attr(\"fill\", \"none\")\n      // .attr(\"stroke\", \"grey\")\n      // .attr(\"d\", linkGenerator)\n      // .attr(\"x1\", link => link.source.x)\n      // .attr(\"y1\", link => link.source.y)\n      // .attr(\"x2\", link => link.target.x)\n      // .attr(\"y2\", link => link.target.y)\n\n      svg.selectAll(\".label\").data(root.descendants()).join(\"text\").attr(\"class\", \"label\").attr(\"fill\", \"black\").text(node => node.data.language).attr(\"font-size\", 16).attr(\"text-anchor\", \"middle\").attr(\"x\", node => node.x).attr(\"y\", node => node.y + 85);\n    });\n    svg.on(\"mousemove\", () => {\n      const [x, y] = mouse(svgRef.current);\n      simulation.force(\"x\", forceX(x).strength(node => 0.2 + node.depth * 0.15)).force(\"y\", forceY(y).strength(node => 0.2 + node.depth * 0.15));\n    });\n    svg.on(\"click\", () => {\n      const [x, y] = mouse(svgRef.current);\n      simulation.alpha(0.5).restart().force(\"orbit\", forceRadial(100, x, y));\n      svg.selectAll(\".orbit\").data([json]).join(\"circle\").attr(\"class\", \"orbit\").attr(\"fill\", \"none\").attr(\"r\", 500).attr(\"cx\", x).attr(\"cy\", y);\n    });\n  }, [json]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(\"svg\", {\n    ref: svgRef,\n    width: \"2000px\",\n    height: \"2000px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Forced Layout\"));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/ar/projects/popular/components/ForceLayout.jsx"],"names":["React","useEffect","useState","useRef","dynamic","select","hierarchy","tree","linkVertical","forceSimulation","forceCenter","mouse","forceX","forceY","forceCollide","forceRadial","json","forceManyBody","useResizeObserver","Page","props","svgRef","wrapperRef","dimensions","svg","current","root","nodeData","descendants","linkData","links","simulation","force","strength","on","console","log","alpha","linkGenerator","x","node","y","selectAll","data","join","attr","text","language","depth","restart"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport dynamic from 'next/dynamic'\nimport { select, hierarchy, tree, linkVertical, forceSimulation, forceCenter, mouse,  forceX,  forceY, forceCollide, forceRadial} from \"d3\"\nimport json from './lang'\nimport { forceManyBody } from 'd3-force';\nimport useResizeObserver from '../hooks/useResizeObeserver'\n\n// const useResizeObserver = ref => {\n//   const [dimensions, setDimensions] = useState()\n\n//   useEffect(() => {\n//   const observeTarget = ref.current\n//   const resizeObserever = new useResizeObserver((entries) => {\n//     console.log(entries)\n//   })\n//   resizeObserver.observe(observeTarget)\n//   return () => {\n//     resizeObserever.unobserve(observeTarget)\n//   }\n//   }, [ref])\n//   return dimensions;\n\n// }\n\nconst Page = (props) => {\n  const svgRef = useRef()\n  const wrapperRef = useRef()\n  const dimensions = useResizeObserver(wrapperRef)\n\tuseEffect(() => {\n\t\tconst svg = select(svgRef.current)\n\t\tconst root = hierarchy(json)\n    const nodeData = root.descendants()\n    const linkData = root.links()\n    \n    const simulation = forceSimulation(nodeData)\n    // force\n    .force(\"center\", forceCenter(1000, 1000))\n    .force(\"charge\", forceManyBody().strength(-40))\n    .force(\"collide\", forceCollide(60))\n    .on(\"tick\", () => {\n      console.log(\"current force\", simulation.alpha())\n      const linkGenerator = linkVertical()\n      .x(node => node.x)\n      .y(node => node.y + 100)\n  \n      svg\n      .selectAll(\".node\")\n      .data(nodeData)\n      .join(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", 5)\n      .attr(\"fill\", \"grey\")\n      .attr(\"cx\", node => node.x)\n      .attr(\"cy\", node => node.y + 100)\n  \n      // svg\n      // .selectAll(\".link\")\n      // .data(linkData)\n      // .join(\"path\").attr(\"class\",\"link\")\n      // .attr(\"fill\", \"none\")\n      // .attr(\"stroke\", \"grey\")\n      // .attr(\"d\", linkGenerator)\n      // .attr(\"x1\", link => link.source.x)\n      // .attr(\"y1\", link => link.source.y)\n      // .attr(\"x2\", link => link.target.x)\n      // .attr(\"y2\", link => link.target.y)\n  \n      svg\n      .selectAll(\".label\")\n      .data(root.descendants())\n      .join(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"fill\", \"black\")\n      .text(node => node.data.language)\n      .attr(\"font-size\", 16)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"x\", node => node.x)\n      .attr(\"y\", node => node.y + 85)\n  \n    })\n\n    svg.on(\"mousemove\", ()=> {\n      const [x,y] = mouse(svgRef.current)\n      simulation\n      .force(\"x\", forceX(x).strength(node => 0.2 + node.depth * 0.15))\n      .force(\"y\", forceY(y).strength(node => 0.2 + node.depth * 0.15))\n    })\n\n    svg.on(\"click\", () => {\n       const [x, y] = mouse(svgRef.current)\n       simulation\n       .alpha(0.5)\n       .restart()\n       .force(\"orbit\", forceRadial(100, x, y))\n\n       svg.selectAll(\".orbit\")\n       .data([json])\n       .join(\"circle\")\n       .attr(\"class\", \"orbit\")\n       .attr(\"fill\", \"none\")\n       .attr(\"r\", 500)\n       .attr(\"cx\", x)\n       .attr(\"cy\", y)\n    })\n\t}, [json])\n\nreturn (\n\t<React.Fragment>\n    <div ref={wrapperRef}>\n      \t<svg ref={svgRef}  width='2000px' height='2000px'></svg>\n    </div>\n\t\t<br/>\n    <h1>Forced Layout</h1>\n\t</React.Fragment>\n )\n\n}\n\nexport default Page\n"]},"metadata":{},"sourceType":"module"}