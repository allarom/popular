{"ast":null,"code":"var _jsxFileName = \"/Users/ar/projects/popular/components/ForceLayout.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { select, hierarchy, tree, linkVertical, forceSimulation, forceCenter, mouse, forceX, forceY, forceCollide, forceRadial } from \"d3\";\nimport json from './lang';\nimport { forceManyBody } from 'd3-force';\nimport useResizeObserver from '../hooks/useResizeObeserver';\n\nvar Page = function Page(props) {\n  var svgRef = useRef();\n  var wrapperRef = useRef();\n  var dimensions = useResizeObserver(wrapperRef);\n  useEffect(function () {\n    console.log(dimensions);\n    if (!dimensions) return;\n    var svg = select(svgRef.current);\n    var root; // const root = hierarchy(json)\n    // const nodeData = root.descendants()\n    // const linkData = root.links()\n\n    var link = svg.selectAll(\".link\"),\n        node = svg.selectAll(\".node\");\n    d3.json(\"json\", function (error, json) {\n      if (error) throw error;\n      root = json;\n      update();\n    });\n\n    function update() {\n      var nodes = flatten(root),\n          links = d3.layout.tree().links(nodes); // Restart the force layout.\n\n      force.nodes(nodes).links(links).start(); // Update the links…\n\n      link = link.data(links, function (d) {\n        return d.target.id;\n      }); // Exit any old links.\n\n      link.exit().remove(); // Enter any new links.\n\n      link.enter().insert(\"line\", \".node\").attr(\"class\", \"link\").attr(\"x1\", function (d) {\n        return d.source.x;\n      }).attr(\"y1\", function (d) {\n        return d.source.y;\n      }).attr(\"x2\", function (d) {\n        return d.target.x;\n      }).attr(\"y2\", function (d) {\n        return d.target.y;\n      }); // Update the nodes…\n\n      node = node.data(nodes, function (d) {\n        return d.id;\n      }).style(\"fill\", color); // Exit any old nodes.\n\n      node.exit().remove(); // Enter any new nodes.\n\n      node.enter().append(\"circle\").attr(\"class\", \"node\").attr(\"cx\", function (d) {\n        return d.x;\n      }).attr(\"cy\", function (d) {\n        return d.y;\n      }).attr(\"r\", function (d) {\n        return Math.sqrt(d.size) / 10 || 4.5;\n      }).style(\"fill\", color).on(\"click\", click).call(force.drag);\n    }\n\n    function tick() {\n      link.attr(\"x1\", function (d) {\n        return d.source.x;\n      }).attr(\"y1\", function (d) {\n        return d.source.y;\n      }).attr(\"x2\", function (d) {\n        return d.target.x;\n      }).attr(\"y2\", function (d) {\n        return d.target.y;\n      });\n      node.attr(\"cx\", function (d) {\n        return d.x;\n      }).attr(\"cy\", function (d) {\n        return d.y;\n      });\n    } // Color leaf nodes orange, and packages white or blue.\n\n\n    function color(d) {\n      return d._children ? \"#3182bd\" : d.children ? \"#c6dbef\" : \"#fd8d3c\";\n    } // Toggle children on click.\n\n\n    function click(d) {\n      if (!d3.event.defaultPrevented) {\n        if (d.children) {\n          d._children = d.children;\n          d.children = null;\n        } else {\n          d.children = d._children;\n          d._children = null;\n        }\n\n        update();\n      }\n    } // Returns a list of all nodes under the root.\n\n\n    function flatten(root) {\n      var nodes = [],\n          i = 0;\n\n      function recurse(node) {\n        if (node.children) node.children.forEach(recurse);\n        if (!node.id) node.id = ++i;\n        nodes.push(node);\n      }\n\n      recurse(root);\n      return nodes;\n    } // const simulation = forceSimulation(nodeData)\n    // // force\n    // .force(\"center\", forceCenter(dimensions.width/2, dimensions.height/2))\n    // .force(\"charge\", forceManyBody().strength(-40))\n    // .force(\"collide\", forceCollide(60))\n    // .on(\"tick\", () => {\n    //   const linkGenerator = linkVertical()\n    //   .x(node => node.x)\n    //   .y(node => node.y + 100)\n    //   svg\n    //   .selectAll(\".node\")\n    //   .data(nodeData)\n    //   .join(\"circle\")\n    //   .attr(\"class\", \"node\")\n    //   .attr(\"r\", 5)\n    //   .attr(\"fill\", \"grey\")\n    //   .attr(\"cx\", node => node.x)\n    //   .attr(\"cy\", node => node.y + 100)\n    //   svg\n    //   .selectAll(\".link\")\n    //   .data(linkData)\n    //   .join(\"path\").attr(\"class\",\"link\")\n    //   .attr(\"fill\", \"none\")\n    //   .attr(\"stroke\", \"grey\")\n    //   .attr(\"d\", linkGenerator)\n    //   .attr(\"x1\", link => link.source.x)\n    //   .attr(\"y1\", link => link.source.y)\n    //   .attr(\"x2\", link => link.target.x)\n    //   .attr(\"y2\", link => link.target.y)\n    //   svg\n    //   .selectAll(\".label\")\n    //   .data(root.descendants())\n    //   .join(\"text\")\n    //   .attr(\"class\", \"label\")\n    //   .attr(\"fill\", \"black\")\n    //   .text(node => node.data.language)\n    //   .attr(\"font-size\", 16)\n    //   .attr(\"text-anchor\", \"middle\")\n    //   .attr(\"x\", node => node.x)\n    //   .attr(\"y\", node => node.y + 85)\n    // })\n    // svg.on(\"mousemove\", ()=> {\n    //   const [x,y] = mouse(svgRef.current)\n    //   simulation\n    //   .force(\"x\", forceX(x).strength(node => 0.2 + node.depth * 0.15))\n    //   .force(\"y\", forceY(y).strength(node => 0.2 + node.depth * 0.15))\n    // })\n    // svg.on(\"click\", () => {\n    //    const [x, y] = mouse(svgRef.current)\n    //    simulation\n    //    .alpha(0.5)\n    //    .restart()\n    //    .force(\"orbit\", forceRadial(100, x, y))\n    //    svg.selectAll(\".orbit\")\n    //    .data([json])\n    //    .join(\"circle\")\n    //    .attr(\"class\", \"orbit\")\n    //    .attr(\"fill\", \"none\")\n    //    .attr(\"r\", 500)\n    //    .attr(\"cx\", x)\n    //    .attr(\"cy\", y)\n    // })\n\n  }, [json, dimensions]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    ref: wrapperRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, __jsx(\"svg\", {\n    ref: svgRef,\n    height: \"100vh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Forced Layout\"));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/ar/projects/popular/components/ForceLayout.jsx"],"names":["React","useEffect","useState","useRef","dynamic","select","hierarchy","tree","linkVertical","forceSimulation","forceCenter","mouse","forceX","forceY","forceCollide","forceRadial","json","forceManyBody","useResizeObserver","Page","props","svgRef","wrapperRef","dimensions","console","log","svg","current","root","link","selectAll","node","d3","error","update","nodes","flatten","links","layout","force","start","data","d","target","id","exit","remove","enter","insert","attr","source","x","y","style","color","append","Math","sqrt","size","on","click","call","drag","tick","_children","children","event","defaultPrevented","i","recurse","forEach","push"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport dynamic from 'next/dynamic'\nimport { select, hierarchy, tree, linkVertical, forceSimulation, forceCenter,  mouse,  forceX,  forceY, forceCollide, forceRadial} from \"d3\"\nimport json from './lang'\nimport { forceManyBody } from 'd3-force';\nimport useResizeObserver from '../hooks/useResizeObeserver'\n\n\nconst Page = (props) => {\n  const svgRef = useRef()\n  const wrapperRef = useRef()\n  const dimensions = useResizeObserver(wrapperRef)\n\tuseEffect(() => {\n    console.log(dimensions)\n    if(!dimensions) return\n    const svg = select(svgRef.current)\n    let root\n\t\t// const root = hierarchy(json)\n    // const nodeData = root.descendants()\n    // const linkData = root.links()\n\n    var link = svg.selectAll(\".link\"),\n    node = svg.selectAll(\".node\");\n\n    d3.json(\"json\", function(error, json) {\n      if (error) throw error;\n    \n      root = json;\n      update();\n    });\n    \n    function update() {\n      var nodes = flatten(root),\n          links = d3.layout.tree().links(nodes);\n    \n      // Restart the force layout.\n      force\n          .nodes(nodes)\n          .links(links)\n          .start();\n    \n      // Update the links…\n      link = link.data(links, function(d) { return d.target.id; });\n    \n      // Exit any old links.\n      link.exit().remove();\n    \n      // Enter any new links.\n      link.enter().insert(\"line\", \".node\")\n          .attr(\"class\", \"link\")\n          .attr(\"x1\", function(d) { return d.source.x; })\n          .attr(\"y1\", function(d) { return d.source.y; })\n          .attr(\"x2\", function(d) { return d.target.x; })\n          .attr(\"y2\", function(d) { return d.target.y; });\n    \n      // Update the nodes…\n      node = node.data(nodes, function(d) { return d.id; }).style(\"fill\", color);\n    \n      // Exit any old nodes.\n      node.exit().remove();\n    \n      // Enter any new nodes.\n      node.enter().append(\"circle\")\n          .attr(\"class\", \"node\")\n          .attr(\"cx\", function(d) { return d.x; })\n          .attr(\"cy\", function(d) { return d.y; })\n          .attr(\"r\", function(d) { return Math.sqrt(d.size) / 10 || 4.5; })\n          .style(\"fill\", color)\n          .on(\"click\", click)\n          .call(force.drag);\n    }\n    \n    function tick() {\n      link.attr(\"x1\", function(d) { return d.source.x; })\n          .attr(\"y1\", function(d) { return d.source.y; })\n          .attr(\"x2\", function(d) { return d.target.x; })\n          .attr(\"y2\", function(d) { return d.target.y; });\n    \n      node.attr(\"cx\", function(d) { return d.x; })\n          .attr(\"cy\", function(d) { return d.y; });\n    }\n    \n    // Color leaf nodes orange, and packages white or blue.\n    function color(d) {\n      return d._children ? \"#3182bd\" : d.children ? \"#c6dbef\" : \"#fd8d3c\";\n    }\n    \n    // Toggle children on click.\n    function click(d) {\n      if (!d3.event.defaultPrevented) {\n        if (d.children) {\n          d._children = d.children;\n          d.children = null;\n        } else {\n          d.children = d._children;\n          d._children = null;\n        }\n        update();\n      }\n    }\n    \n    // Returns a list of all nodes under the root.\n    function flatten(root) {\n      var nodes = [], i = 0;\n    \n      function recurse(node) {\n        if (node.children) node.children.forEach(recurse);\n        if (!node.id) node.id = ++i;\n        nodes.push(node);\n      }\n    \n      recurse(root);\n      return nodes;\n    }\n    \n    // const simulation = forceSimulation(nodeData)\n    // // force\n    // .force(\"center\", forceCenter(dimensions.width/2, dimensions.height/2))\n    // .force(\"charge\", forceManyBody().strength(-40))\n    // .force(\"collide\", forceCollide(60))\n    // .on(\"tick\", () => {\n    //   const linkGenerator = linkVertical()\n    //   .x(node => node.x)\n    //   .y(node => node.y + 100)\n  \n    //   svg\n    //   .selectAll(\".node\")\n    //   .data(nodeData)\n    //   .join(\"circle\")\n    //   .attr(\"class\", \"node\")\n    //   .attr(\"r\", 5)\n    //   .attr(\"fill\", \"grey\")\n    //   .attr(\"cx\", node => node.x)\n    //   .attr(\"cy\", node => node.y + 100)\n  \n    //   svg\n    //   .selectAll(\".link\")\n    //   .data(linkData)\n    //   .join(\"path\").attr(\"class\",\"link\")\n    //   .attr(\"fill\", \"none\")\n    //   .attr(\"stroke\", \"grey\")\n    //   .attr(\"d\", linkGenerator)\n    //   .attr(\"x1\", link => link.source.x)\n    //   .attr(\"y1\", link => link.source.y)\n    //   .attr(\"x2\", link => link.target.x)\n    //   .attr(\"y2\", link => link.target.y)\n  \n    //   svg\n    //   .selectAll(\".label\")\n    //   .data(root.descendants())\n    //   .join(\"text\")\n    //   .attr(\"class\", \"label\")\n    //   .attr(\"fill\", \"black\")\n    //   .text(node => node.data.language)\n    //   .attr(\"font-size\", 16)\n    //   .attr(\"text-anchor\", \"middle\")\n    //   .attr(\"x\", node => node.x)\n    //   .attr(\"y\", node => node.y + 85)\n  \n    // })\n\n    // svg.on(\"mousemove\", ()=> {\n    //   const [x,y] = mouse(svgRef.current)\n    //   simulation\n    //   .force(\"x\", forceX(x).strength(node => 0.2 + node.depth * 0.15))\n    //   .force(\"y\", forceY(y).strength(node => 0.2 + node.depth * 0.15))\n    // })\n\n    // svg.on(\"click\", () => {\n    //    const [x, y] = mouse(svgRef.current)\n    //    simulation\n    //    .alpha(0.5)\n    //    .restart()\n    //    .force(\"orbit\", forceRadial(100, x, y))\n\n    //    svg.selectAll(\".orbit\")\n    //    .data([json])\n    //    .join(\"circle\")\n    //    .attr(\"class\", \"orbit\")\n    //    .attr(\"fill\", \"none\")\n    //    .attr(\"r\", 500)\n    //    .attr(\"cx\", x)\n    //    .attr(\"cy\", y)\n    // })\n\t}, [json, dimensions])\n\nreturn (\n\t<React.Fragment>\n    <div ref={wrapperRef}>\n      \t<svg ref={svgRef} height=\"100vh\"></svg>\n    </div>\n\t\t<br/>\n    <h1>Forced Layout</h1>\n\t</React.Fragment>\n )\n\n}\n\nexport default Page\n"]},"metadata":{},"sourceType":"module"}