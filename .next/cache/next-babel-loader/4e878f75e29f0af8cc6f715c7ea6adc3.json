{"ast":null,"code":"var _jsxFileName = \"/Users/ar/projects/popular/components/Page.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { select } from \"d3\";\n\nconst Page = props => {\n  const {\n    0: windowsWidth,\n    1: setWidth\n  } = useState();\n  const {\n    0: windowsHeight,\n    1: setHeight\n  } = useState();\n  const {\n    0: data,\n    1: setData\n  } = useState(null);\n  const svgRef = useRef();\n  const title = props.props.map(e => e.title);\n\n  if (false) {}\n\n  useEffect(() => {\n    setData(title);\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n    const svg = select(svgRef.current);\n    svg.selectAll(\"circle\").data(data).join(\"circle\"); // .attr(\"r\", value => value)\n    // .attr(\"cx\", value => value *  2)\n    // .attr(\"cy\", value => value * 2)\n  }, [data]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"svg\", {\n    ref: svgRef,\n    width: windowsWidth,\n    height: windowsHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: () => setData(data.map(value => value + 5)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Update\"));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/ar/projects/popular/components/Page.jsx"],"names":["React","useEffect","useState","useRef","dynamic","select","Page","props","windowsWidth","setWidth","windowsHeight","setHeight","data","setData","svgRef","title","map","e","window","innerWidth","innerHeight","svg","current","selectAll","join","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,MAAT,QAAuB,IAAvB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAA2BP,QAAQ,EAAzC;AACA,QAAM;AAAA,OAACQ,aAAD;AAAA,OAAgBC;AAAhB,MAA6BT,QAAQ,EAA3C;AACA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMY,MAAM,GAAGX,MAAM,EAArB;AACA,QAAMY,KAAK,GAAGR,KAAK,CAACA,KAAN,CAAYS,GAAZ,CAAgBC,CAAC,IAAIA,CAAC,CAACF,KAAvB,CAAd;;AACA,aAA+B,CAE9B;;AACDd,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,OAAO,CAACE,KAAD,CAAP;AACAN,IAAAA,QAAQ,CAACS,MAAM,CAACC,UAAR,CAAR;AACAR,IAAAA,SAAS,CAACO,MAAM,CAACE,WAAR,CAAT;AACA,UAAMC,GAAG,GAAGhB,MAAM,CAACS,MAAM,CAACQ,OAAR,CAAlB;AACAD,IAAAA,GAAG,CAACE,SAAJ,CAAc,QAAd,EACCX,IADD,CACMA,IADN,EAECY,IAFD,CAEM,QAFN,EALe,CAQf;AACA;AACA;AACC,GAXO,EAWL,CAACZ,IAAD,CAXK,CAAT;AAaD,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAmB,IAAA,KAAK,EAAEN,YAA1B;AAAwC,IAAA,MAAM,EAAEE,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAQ,IAAA,OAAO,EAAE,MAAMG,OAAO,CAACD,IAAI,CAACI,GAAL,CAASS,KAAK,IAAIA,KAAK,GAAG,CAA1B,CAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,CADD;AAUC,CAhCD;;AAkCA,eAAenB,IAAf","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport dynamic from 'next/dynamic'\nimport { select } from \"d3\"\n\nconst Page = (props) => {\n\tconst [windowsWidth, setWidth] = useState()\n\tconst [windowsHeight, setHeight] = useState()\n\tconst [data, setData] = useState(null);\n\tconst svgRef = useRef();\n\tconst title = props.props.map(e => e.title);\n\tif (typeof window === 'object'){\n\n\t}\n\tuseEffect(() => {\n\t\tsetData(title)\n\t\tsetWidth(window.innerWidth);\n\t\tsetHeight(window.innerHeight);\n\t\tconst svg = select(svgRef.current);\n\t\tsvg.selectAll(\"circle\")\n\t\t.data(data)\n\t\t.join(\"circle\")\t\n\t\t// .attr(\"r\", value => value)\n\t\t// .attr(\"cx\", value => value *  2)\n\t\t// .attr(\"cy\", value => value * 2)\n  }, [data])\n\nreturn (\n\t<React.Fragment>\n\t\t<svg ref={svgRef}  width={windowsWidth} height={windowsHeight}></svg>\n\t\t<br/>\n\t\t<button onClick={() => setData(data.map(value => value + 5))}>\n\t\tUpdate\n\t\t</button>\n\t</React.Fragment>\n )\n\n}\n\nexport default Page\n"]},"metadata":{},"sourceType":"module"}