{"ast":null,"code":"var _jsxFileName = \"/Users/ar/projects/popular/components/Page.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { select, hierarchy } from \"d3\";\n\nvar Page = function Page(props) {\n  // let [data, setData] = useState();\n  var svgRef = useRef();\n  var title = null;\n  useEffect(function () {\n    var svg = select(svgRef.current); // const data = props.props.map(e => {\n    // \tconst title = []\n    // \tconst traffic = []\n    // \ttitle.push(e.title)\n    // \ttraffic.push(parseInt(e.traffic.match(/\\d+/)[0]))\n    // \treturn title, traffic\n    // });\n\n    var root = hierarchy(props.props[0]);\n    console.log(\"root\", root.descendants());\n    console.log(\"root\", root.links());\n\n    var myX = function myX() {\n      var a = [50, 120, 230, 310, 360, 600];\n    };\n\n    var x = Math.random() * (2000 - 20 * 2) + 20;\n    var y = Math.random() * (2000 - 20 * 2) + 20; // setData(title)\n    // svg.selectAll(\"circle\")\n    // .data(data)\n    // .join(\"circle\")\t\n    // .attr(\"r\", 20)\n    // .attr(\"cx\", value => myX(value))\n    // .attr(\"cy\", y)\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"svg\", {\n    ref: svgRef,\n    width: \"2000px\",\n    height: \"2000px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setData(data.map(function (value) {\n        return value + 5;\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Update\"));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/ar/projects/popular/components/Page.jsx"],"names":["React","useEffect","useState","useRef","dynamic","select","hierarchy","Page","props","svgRef","title","svg","current","root","console","log","descendants","links","myX","a","x","Math","random","y","setData","data","map","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,IAAlC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACvB;AACA,MAAMC,MAAM,GAAGN,MAAM,EAArB;AACA,MAAIO,KAAK,GAAG,IAAZ;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMU,GAAG,GAAGN,MAAM,CAACI,MAAM,CAACG,OAAR,CAAlB,CADe,CAEf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,IAAI,GAAGP,SAAS,CAACE,KAAK,CAACA,KAAN,CAAY,CAAZ,CAAD,CAAtB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAAI,CAACG,WAAL,EAApB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAAI,CAACI,KAAL,EAApB;;AACA,QAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AACjB,UAAMC,CAAC,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,CAAV;AAEA,KAHD;;AAIA,QAAMC,CAAC,GAAGC,IAAI,CAACC,MAAL,MAAkB,OAAO,KAAK,CAA9B,IAAoC,EAA9C;AACA,QAAMC,CAAC,GAAGF,IAAI,CAACC,MAAL,MAAkB,OAAO,KAAK,CAA9B,IAAmC,EAA7C,CAlBe,CAmBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA1BQ,EA0BN,EA1BM,CAAT;AA4BD,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,GAAG,EAAEb,MAAV;AAAmB,IAAA,KAAK,EAAC,QAAzB;AAAkC,IAAA,MAAM,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMe,OAAO,CAACC,IAAI,CAACC,GAAL,CAAS,UAAAC,KAAK;AAAA,eAAIA,KAAK,GAAG,CAAZ;AAAA,OAAd,CAAD,CAAb;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,CADD;AAUC,CA3CD;;AA6CA,eAAepB,IAAf","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport dynamic from 'next/dynamic'\nimport { select, hierarchy } from \"d3\"\n\nconst Page = (props) => {\n\t// let [data, setData] = useState();\n\tconst svgRef = useRef();\n\tlet title = null\n\n\tuseEffect(() => {\n\t\tconst svg = select(svgRef.current);\n\t\t// const data = props.props.map(e => {\n\t\t// \tconst title = []\n\t\t// \tconst traffic = []\n\t\t// \ttitle.push(e.title)\n\t\t// \ttraffic.push(parseInt(e.traffic.match(/\\d+/)[0]))\n\t\t// \treturn title, traffic\n\t\t// });\n\n\t\tconst root = hierarchy(props.props[0])\n\t\tconsole.log(\"root\", root.descendants())\n\t\tconsole.log(\"root\", root.links())\n\t\tconst myX = () => {\n\t\t\tconst a = [50, 120, 230, 310, 360, 600]\n\n\t\t}\n\t\tconst x = Math.random() * ( 2000 - 20 * 2 ) + 20;\n\t\tconst y = Math.random() * ( 2000 - 20 * 2) + 20;\n\t\t// setData(title)\n\t\t// svg.selectAll(\"circle\")\n\t\t// .data(data)\n\t\t// .join(\"circle\")\t\n\t\t// .attr(\"r\", 20)\n\t\t// .attr(\"cx\", value => myX(value))\n\t\t// .attr(\"cy\", y)\n\t}, [])\n\nreturn (\n\t<React.Fragment>\n\t\t<svg ref={svgRef}  width='2000px' height='2000px'></svg>\n\t\t<br/>\n\t\t<button onClick={() => setData(data.map(value => value + 5))}>\n\t\tUpdate\n\t\t</button>\n\t</React.Fragment>\n )\n\n}\n\nexport default Page\n"]},"metadata":{},"sourceType":"module"}