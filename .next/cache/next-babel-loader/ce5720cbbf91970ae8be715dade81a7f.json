{"ast":null,"code":"import React, { useEffect, useState, useRef } from 'react';\nexport default useResizeObserver = function (_useResizeObserver) {\n  function useResizeObserver(_x) {\n    return _useResizeObserver.apply(this, arguments);\n  }\n\n  useResizeObserver.toString = function () {\n    return _useResizeObserver.toString();\n  };\n\n  return useResizeObserver;\n}(function (ref) {\n  var _useState = useState(),\n      dimensions = _useState[0],\n      setDimensions = _useState[1];\n\n  useEffect(function () {\n    var observeTarget = ref.current;\n    var resizeObserever = new useResizeObserver(function (entries) {\n      console.log(entries);\n    });\n    resizeObserver.observe(observeTarget);\n    return function () {\n      resizeObserever.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n});","map":{"version":3,"sources":["/Users/ar/projects/popular/hooks/useResizeObeserver.jsx"],"names":["React","useEffect","useState","useRef","useResizeObserver","ref","dimensions","setDimensions","observeTarget","current","resizeObserever","entries","console","log","resizeObserver","observe","unobserve"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AAEA,eAAeC,iBAAiB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAG,UAAAC,GAAG,EAAI;AAAA,kBACJH,QAAQ,EADJ;AAAA,MACjCI,UADiC;AAAA,MACrBC,aADqB;;AAGxCN,EAAAA,SAAS,CAAC,YAAM;AAChB,QAAMO,aAAa,GAAGH,GAAG,CAACI,OAA1B;AACA,QAAMC,eAAe,GAAG,IAAIN,iBAAJ,CAAsB,UAACO,OAAD,EAAa;AACzDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,KAFuB,CAAxB;AAGAG,IAAAA,cAAc,CAACC,OAAf,CAAuBP,aAAvB;AACA,WAAO,YAAM;AACXE,MAAAA,eAAe,CAACM,SAAhB,CAA0BR,aAA1B;AACD,KAFD;AAGC,GATQ,EASN,CAACH,GAAD,CATM,CAAT;AAUA,SAAOC,UAAP;AAED,CAf+B,CAAhC","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\n\nexport default useResizeObserver = ref => {\n  const [dimensions, setDimensions] = useState()\n\n  useEffect(() => {\n  const observeTarget = ref.current\n  const resizeObserever = new useResizeObserver((entries) => {\n    console.log(entries)\n  })\n  resizeObserver.observe(observeTarget)\n  return () => {\n    resizeObserever.unobserve(observeTarget)\n  }\n  }, [ref])\n  return dimensions;\n\n}"]},"metadata":{},"sourceType":"module"}