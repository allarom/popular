{"ast":null,"code":"var _jsxFileName = \"/Users/ar/projects/popular/components/Page.jsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { select, hierarchy, tree, linkVertical } from \"d3\";\n\nconst Page = props => {\n  // let [data, setData] = useState();\n  const svgRef = useRef();\n  let title = null;\n  useEffect(() => {\n    const svg = select(svgRef.current); // const data = props.props.map(e => {\n    // \tconst title = []\n    // \tconst traffic = []\n    // \ttitle.push(e.title)\n    // \ttraffic.push(parseInt(e.traffic.match(/\\d+/)[0]))\n    // \treturn title, traffic\n    // });\n\n    const root = hierarchy(props.props[0]);\n    const treeLayout = tree().size([300, 300]);\n    treeLayout(root);\n    console.log(\"root\", root.descendants());\n    console.log(\"root\", root.links());\n    const linkGenerator = linkVertical().x(node => node.x).y(node => node.y);\n    svg.selectAll(\".node\").data(root.descendants()).join(\"circle\").attr(\"class\", \"node\").attr(\"r\", 10).attr(\"fill\", \"black\").attr(\"cx\", node => node.x).attr(\"cy\", node => node.y);\n    svg.selectAll(\".link\").data(root.links()).join(\"path\").attr(\"class\", \"link\").attr(\"fill\", \"none\").attr(\"stroke\", \"black\").attr(\"d\", linkGenerator);\n    svg.selectAll(\".label\").data(root.descendants()).join(\"text\").attr(\"class\", \"label\").text(node => node.data.title).attr(\"font-size\", 24).attr(\"text-anchor\", \"middle\").attr(\"cx\", node => node.x).attr(\"cy\", node => node.y);\n\n    const myX = () => {\n      const a = [50, 120, 230, 310, 360, 600];\n    };\n\n    const x = Math.random() * (2000 - 20 * 2) + 20;\n    const y = Math.random() * (2000 - 20 * 2) + 20; // setData(title)\n    // svg.selectAll(\"circle\")\n    // .data(data)\n    // .join(\"circle\")\t\n    // .attr(\"r\", 20)\n    // .attr(\"cx\", value => myX(value))\n    // .attr(\"cy\", y)\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"svg\", {\n    ref: svgRef,\n    width: \"2000px\",\n    height: \"2000px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: () => setData(data.map(value => value + 5)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Update\"));\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/ar/projects/popular/components/Page.jsx"],"names":["React","useEffect","useState","useRef","dynamic","select","hierarchy","tree","linkVertical","Page","props","svgRef","title","svg","current","root","treeLayout","size","console","log","descendants","links","linkGenerator","x","node","y","selectAll","data","join","attr","text","myX","a","Math","random","setData","map","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport dynamic from 'next/dynamic'\nimport { select, hierarchy, tree, linkVertical } from \"d3\"\n\nconst Page = (props) => {\n\t// let [data, setData] = useState();\n\tconst svgRef = useRef();\n\tlet title = null\n\n\tuseEffect(() => {\n\t\tconst svg = select(svgRef.current);\n\t\t// const data = props.props.map(e => {\n\t\t// \tconst title = []\n\t\t// \tconst traffic = []\n\t\t// \ttitle.push(e.title)\n\t\t// \ttraffic.push(parseInt(e.traffic.match(/\\d+/)[0]))\n\t\t// \treturn title, traffic\n\t\t// });\n\n\t\tconst root = hierarchy(props.props[0])\n\t\tconst treeLayout = tree().size([300, 300])\n\t\ttreeLayout(root)\n\t\tconsole.log(\"root\", root.descendants())\n\t\tconsole.log(\"root\", root.links())\n\n\t\tconst linkGenerator = linkVertical()\n\t\t.x(node => node.x)\n\t\t.y(node => node.y)\n\n\t\tsvg\n\t\t.selectAll(\".node\")\n\t\t.data(root.descendants())\n\t\t.join(\"circle\")\n\t\t.attr(\"class\", \"node\")\n\t\t.attr(\"r\", 10)\n\t\t.attr(\"fill\", \"black\")\n\t\t.attr(\"cx\", node => node.x)\n\t\t.attr(\"cy\", node => node.y)\n\n\t\tsvg\n\t\t.selectAll(\".link\").data(root.links())\n\t\t.join(\"path\").attr(\"class\",\"link\")\n\t\t.attr(\"fill\", \"none\")\n\t\t.attr(\"stroke\", \"black\")\n\t\t.attr(\"d\", linkGenerator)\n\n\t\tsvg\n\t\t.selectAll(\".label\")\n\t\t.data(root.descendants())\n\t\t.join(\"text\")\n\t\t.attr(\"class\", \"label\")\n\t\t.text(node => node.data.title)\n\t\t.attr(\"font-size\", 24)\n\t\t.attr(\"text-anchor\", \"middle\")\n\t\t.attr(\"cx\", node => node.x)\n\t\t.attr(\"cy\", node => node.y)\n\n\n\t\tconst myX = () => {\n\t\t\tconst a = [50, 120, 230, 310, 360, 600]\n\n\t\t}\n\t\tconst x = Math.random() * ( 2000 - 20 * 2 ) + 20;\n\t\tconst y = Math.random() * ( 2000 - 20 * 2) + 20;\n\t\t// setData(title)\n\t\t// svg.selectAll(\"circle\")\n\t\t// .data(data)\n\t\t// .join(\"circle\")\t\n\t\t// .attr(\"r\", 20)\n\t\t// .attr(\"cx\", value => myX(value))\n\t\t// .attr(\"cy\", y)\n\t}, [])\n\nreturn (\n\t<React.Fragment>\n\t\t<svg ref={svgRef}  width='2000px' height='2000px'></svg>\n\t\t<br/>\n\t\t<button onClick={() => setData(data.map(value => value + 5))}>\n\t\tUpdate\n\t\t</button>\n\t</React.Fragment>\n )\n\n}\n\nexport default Page\n"]},"metadata":{},"sourceType":"module"}